name: Build and Deploy
on:
  push:
    branches:
      - main
jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'  # Use the Go version appropriate for your project

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ${{ env.GOPATH }}/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.61.0 

      - name: Run golangci-lint
        run: golangci-lint run --timeout 5m

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      docker:
        image: docker:dind
        privileged: true
        options: --mtu=1460 --registry-mirror=https://mirror.gcr.io
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.1'

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ${{ env.GOPATH }}/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Configure Docker Host
        run: echo "::set-env name=DOCKER_HOST::tcp://localhost:2375"

      - name: Wait for Docker
        run: |
          for i in {1..30}; do
            docker info && break
            sleep 1
          done

      - name: Run Tests
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
          DOCKER_HOST: tcp://localhost:2375
        run: go test -v ./...


  deploy:
    name: Deploy app
    needs:
      - lint
      - test
    runs-on: ubuntu-latest
    concurrency: deploy-group
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
