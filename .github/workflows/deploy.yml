name: Deploy

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["CI"]
    branches:
      - main
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  db_migration:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    name: DB Migration
    runs-on: ubuntu-latest
    env:
      GOOSE_DRIVER: postgres
      GOOSE_DBSTRING: postgres://${{ vars.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@localhost:5432/${{ vars.DB_NAME }}?sslmode=disable
      GOOSE_MIGRATION_DIR: ./db_migration
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Setup Go and OpenAPI
        uses: ./.github/actions/setup-go-openapi

      - name: Cache Goose binary
        id: cache-goose
        uses: actions/cache@v4
        with:
          path: ~/go/bin/goose
          key: ${{ runner.os }}-goose-${{ hashFiles('go.mod') }}

      - name: Install Goose
        if: steps.cache-goose.outputs.cache-hit != 'true'
        run: go install github.com/pressly/goose/v3/cmd/goose@latest

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Start Fly Proxy to Database
        run: flyctl proxy 5432 -a database-postgres &
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_DB_TOKEN }}

      - name: Validate migration
        run: goose validate

      - name: Apply migration
        run: goose up

      - name: Stop Fly Proxy
        run: pkill -f "flyctl proxy"
  deploy:
    name: Deploy App
    needs: db_migration
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v5

      - name: Set up Flyctl
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
