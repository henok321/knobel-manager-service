name: SonarCloud

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".pre-commit-config.yaml"
  pull_request:
    paths-ignore:
      - "README.md"
      - "LICENSE"
      - ".pre-commit-config.yaml"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version-file: go.mod
          cache: true
          cache-dependency-path: "**/go.sum"
          check-latest: true

      - name: Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-sonar-
            ${{ runner.os }}-go-build-

      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-cache-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-sonar-cache-

      - name: Generate openapi spec
        run: make openapi

      - name: Install dependencies
        run: go mod download

      - name: Start Docker
        run: sudo systemctl start docker

      - name: Run tests, generate coverage and report files
        env:
          TESTCONTAINERS_RYUK_DISABLED: true
        run: go test ./... -coverpkg=./... -coverprofile=coverage.out --json > test-report.out

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.4
          args: "--timeout 5m --out-format checkstyle:golangci-lint-report.xml"

      - name: Analyze project and upload coverage
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
